{"ast":null,"code":"var _jsxFileName = \"D:\\\\MiPrimerProyectoJS\\\\-Drivers-Proyecto-Individual\\\\Client\\\\src\\\\Components\\\\Detail\\\\Detail.jsx\",\n  _s = $RefreshSig$();\n// USANDO REDUX\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { obtenerDetallesConductor } from \"../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = ({\n  idDriver,\n  conductor,\n  obtenerDetallesConductor\n}) => {\n  _s();\n  useEffect(() => {\n    obtenerDetallesConductor(idDriver);\n  }, [idDriver, obtenerDetallesConductor]);\n  if (!conductor) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    id,\n    Nombre,\n    Apellido,\n    Nacionalidad,\n    Imagen,\n    Descripcion,\n    FechadeNacimiento,\n    Equipos\n  } = conductor;\n  const imagenUrl = Imagen && Imagen.url ? Imagen.url : 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/Carlos_Sainz_2014_Dakar.jpg/250px-Carlos_Sainz_2014_Dakar.jpg';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: Nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: Apellido\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: Nacionalidad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagenUrl,\n      alt: \"Driver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: Descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: FechadeNacimiento\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: Equipos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Detail, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Detail;\nconst mapStateToProps = state => ({\n  conductor: state.detalleConductor\n});\nexport default connect(mapStateToProps, {\n  obtenerDetallesConductor\n})(Detail);\n\n//USANDO REACT\n\n// import { useParams } from \"react-router-dom\";\n// import { useEffect, useState } from \"react\";\n// import Card from \"../Card/Card\";\n// import axios from \"axios\";\n\n// function Detail() {\n\n// const { idDriver } = useParams();\n// const [driverDetail, setDriverDetail] = useState(null);\n// const [teams, setTeams] = useState([]);\n\n// useEffect(() => {\n//     const fetchDriverDetail = async () => {\n//         if (idDriver) {\n//             try {\n//                 const response = await axios.get(`http://localhost:3001/drivers/${idDriver}`);\n//                 const data = response.data;\n//                 if (data.driver) {\n//                     setDriverDetail(data.driver);\n//                     setTeams(data.teams); // Establecer los equipos obtenidos de la respuesta\n//                 } else {\n//                     window.alert(\"No hay conductor con este ID\");\n//                 }\n//             } catch (error) {\n//                 console.error(\"Error al obtener los detalles del conductor:\", error);\n//             }\n//         }\n//     };\n\n//     fetchDriverDetail(); \n// }, [idDriver]);\n\n// if (!driverDetail) {\n//     return <div>Cargando...</div>;\n// }\n\n// // Combinar la información del conductor y los equipos\n// const driverWithTeams = { ...driverDetail, equipos: teams };\n\n{/* <Card conductor={driverWithTeams} />  */}\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useEffect","connect","obtenerDetallesConductor","jsxDEV","_jsxDEV","Detail","idDriver","conductor","_s","children","fileName","_jsxFileName","lineNumber","columnNumber","id","Nombre","Apellido","Nacionalidad","Imagen","Descripcion","FechadeNacimiento","Equipos","imagenUrl","url","src","alt","_c","mapStateToProps","state","detalleConductor","$RefreshReg$"],"sources":["D:/MiPrimerProyectoJS/-Drivers-Proyecto-Individual/Client/src/Components/Detail/Detail.jsx"],"sourcesContent":["// USANDO REDUX\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { obtenerDetallesConductor } from \"../../redux/actions\";\r\n\r\nconst Detail = ({ idDriver, conductor, obtenerDetallesConductor }) => {\r\n  useEffect(() => {\r\n    obtenerDetallesConductor(idDriver);\r\n  }, [idDriver, obtenerDetallesConductor]);\r\n\r\n  if (!conductor) {\r\n    return <div>Cargando...</div>;\r\n  }\r\n\r\n  const { id, Nombre, Apellido, Nacionalidad, Imagen, Descripcion, FechadeNacimiento, Equipos } = conductor;\r\n  const imagenUrl = Imagen && Imagen.url ? Imagen.url : 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/Carlos_Sainz_2014_Dakar.jpg/250px-Carlos_Sainz_2014_Dakar.jpg';\r\n\r\n  return (\r\n    <div>\r\n      <h2>{id}</h2>\r\n      <h2>{Nombre}</h2>\r\n      <h2>{Apellido}</h2>\r\n      <h2>{Nacionalidad}</h2>\r\n      <img src={imagenUrl} alt=\"Driver\" />\r\n      <h2>{Descripcion}</h2>\r\n      <h2>{FechadeNacimiento}</h2>\r\n      <h2>{Equipos}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  conductor: state.detalleConductor,\r\n});\r\n\r\nexport default connect(mapStateToProps, { obtenerDetallesConductor })(Detail);\r\n\r\n\r\n\r\n\r\n//USANDO REACT\r\n\r\n// import { useParams } from \"react-router-dom\";\r\n// import { useEffect, useState } from \"react\";\r\n// import Card from \"../Card/Card\";\r\n// import axios from \"axios\";\r\n\r\n// function Detail() {\r\n\r\n    // const { idDriver } = useParams();\r\n    // const [driverDetail, setDriverDetail] = useState(null);\r\n    // const [teams, setTeams] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     const fetchDriverDetail = async () => {\r\n    //         if (idDriver) {\r\n    //             try {\r\n    //                 const response = await axios.get(`http://localhost:3001/drivers/${idDriver}`);\r\n    //                 const data = response.data;\r\n    //                 if (data.driver) {\r\n    //                     setDriverDetail(data.driver);\r\n    //                     setTeams(data.teams); // Establecer los equipos obtenidos de la respuesta\r\n    //                 } else {\r\n    //                     window.alert(\"No hay conductor con este ID\");\r\n    //                 }\r\n    //             } catch (error) {\r\n    //                 console.error(\"Error al obtener los detalles del conductor:\", error);\r\n    //             }\r\n    //         }\r\n    //     };\r\n    \r\n    //     fetchDriverDetail(); \r\n    // }, [idDriver]);\r\n    \r\n    // if (!driverDetail) {\r\n    //     return <div>Cargando...</div>;\r\n    // }\r\n\r\n    // // Combinar la información del conductor y los equipos\r\n    // const driverWithTeams = { ...driverDetail, equipos: teams };\r\n\r\n      {/* <Card conductor={driverWithTeams} />  */}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,wBAAwB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,MAAM,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS;EAAEL;AAAyB,CAAC,KAAK;EAAAM,EAAA;EACpER,SAAS,CAAC,MAAM;IACdE,wBAAwB,CAACI,QAAQ,CAAC;EACpC,CAAC,EAAE,CAACA,QAAQ,EAAEJ,wBAAwB,CAAC,CAAC;EAExC,IAAI,CAACK,SAAS,EAAE;IACd,oBAAOH,OAAA;MAAAK,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/B;EAEA,MAAM;IAAEC,EAAE;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,MAAM;IAAEC,WAAW;IAAEC,iBAAiB;IAAEC;EAAQ,CAAC,GAAGd,SAAS;EACzG,MAAMe,SAAS,GAAGJ,MAAM,IAAIA,MAAM,CAACK,GAAG,GAAGL,MAAM,CAACK,GAAG,GAAG,yHAAyH;EAE/K,oBACEnB,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAKK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACbT,OAAA;MAAAK,QAAA,EAAKM;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjBT,OAAA;MAAAK,QAAA,EAAKO;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBT,OAAA;MAAAK,QAAA,EAAKQ;IAAY;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBT,OAAA;MAAKoB,GAAG,EAAEF,SAAU;MAACG,GAAG,EAAC;IAAQ;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpCT,OAAA;MAAAK,QAAA,EAAKU;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBT,OAAA;MAAAK,QAAA,EAAKW;IAAiB;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5BT,OAAA;MAAAK,QAAA,EAAKY;IAAO;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAAAL,EAAA,CAxBKH,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AA0BZ,MAAMsB,eAAe,GAAIC,KAAK,KAAM;EAClCrB,SAAS,EAAEqB,KAAK,CAACC;AACnB,CAAC,CAAC;AAEF,eAAe5B,OAAO,CAAC0B,eAAe,EAAE;EAAEzB;AAAyB,CAAC,CAAC,CAACG,MAAM,CAAC;;AAK7E;;AAEA;AACA;AACA;AACA;;AAEA;;AAEI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEE,CAAC;AAA4C,IAAAqB,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}