{"ast":null,"code":"var _jsxFileName = \"D:\\\\MiPrimerProyectoJS\\\\-Drivers-Proyecto-Individual\\\\Client\\\\src\\\\Components\\\\HomePage\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Cards from \"../Cards/Cards\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  onSearch,\n  drivers\n}) => {\n  _s();\n  const conductores = drivers.length > 0 ? drivers[0].conductores : [];\n  console.log(\"conductores:\", conductores);\n  const [conductoresFiltrados, setConductoresFiltrados] = useState(drivers.flat());\n  const [equipoSeleccionado, setEquipoSeleccionado] = useState('');\n  const filtrarPorEquipo = event => {\n    const equipoSeleccionado = event.target.value;\n    setEquipoSeleccionado(equipoSeleccionado);\n\n    // Filtrar conductores basados en el equipo seleccionado\n    const conductoresFiltrados = drivers.flat().filter(conductor => {\n      return conductor.equipos.some(equipo => equipo.Nombre === equipoSeleccionado);\n    });\n    setConductoresFiltrados(conductoresFiltrados);\n  };\n\n  // Obtener todos los equipos disponibles de los conductores\n  const equiposDisponibles = [...new Set(drivers.flat().flatMap(conductor => conductor.equipos.map(equipo => equipo.Nombre)))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"La mejor pagina de la historia la encontraras en Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: equipoSeleccionado,\n      onChange: filtrarPorEquipo,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona un equipo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), equiposDisponibles.map((equipo, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: equipo,\n        children: equipo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Ordenar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      drivers: conductoresFiltrados\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"Wcz61D1nIn495bda1K9yHl2Dj5o=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["SearchBar","Cards","useState","jsxDEV","_jsxDEV","HomePage","onSearch","drivers","_s","conductores","length","console","log","conductoresFiltrados","setConductoresFiltrados","flat","equipoSeleccionado","setEquipoSeleccionado","filtrarPorEquipo","event","target","value","filter","conductor","equipos","some","equipo","Nombre","equiposDisponibles","Set","flatMap","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","index","_c","$RefreshReg$"],"sources":["D:/MiPrimerProyectoJS/-Drivers-Proyecto-Individual/Client/src/Components/HomePage/HomePage.jsx"],"sourcesContent":["import SearchBar from \"../SearchBar/SearchBar\";\r\nimport Cards from \"../Cards/Cards\";\r\nimport { useState } from \"react\";\r\n\r\nconst HomePage = ({ onSearch, drivers }) => {\r\n    \r\nconst conductores = drivers.length > 0 ? drivers[0].conductores : [];\r\nconsole.log(\"conductores:\", conductores);\r\nconst [conductoresFiltrados, setConductoresFiltrados] = useState(drivers.flat());\r\nconst [equipoSeleccionado, setEquipoSeleccionado] = useState('');\r\n\r\n\r\nconst filtrarPorEquipo = (event) => {\r\n  const equipoSeleccionado = event.target.value;\r\n  setEquipoSeleccionado(equipoSeleccionado);\r\n\r\n  // Filtrar conductores basados en el equipo seleccionado\r\n  const conductoresFiltrados = drivers.flat().filter(conductor => {\r\n    return conductor.equipos.some(equipo => equipo.Nombre === equipoSeleccionado);\r\n  });\r\n\r\n  setConductoresFiltrados(conductoresFiltrados);\r\n};\r\n\r\n// Obtener todos los equipos disponibles de los conductores\r\nconst equiposDisponibles = [...new Set(drivers.flat().flatMap(conductor => conductor.equipos.map(equipo => equipo.Nombre)))];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Home Page</h1>\r\n            <h2>La mejor pagina de la historia la encontraras en Home Page</h2>       \r\n            <SearchBar onSearch={onSearch} />\r\n            <select value={equipoSeleccionado} onChange={filtrarPorEquipo}>\r\n        <option value=\"\">Selecciona un equipo</option>\r\n        {equiposDisponibles.map((equipo, index) => (\r\n          <option key={index} value={equipo}>{equipo}</option>\r\n        ))}\r\n      </select>\r\n            <button>Ordenar</button>\r\n\r\n            <Cards drivers={conductoresFiltrados} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}