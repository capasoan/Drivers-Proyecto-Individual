{"ast":null,"code":"var _jsxFileName = \"D:\\\\MiPrimerProyectoJS\\\\-Drivers-Proyecto-Individual\\\\Client\\\\src\\\\Components\\\\HomePage\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Cards from \"../Cards/Cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  onSearch,\n  drivers\n}) => {\n  _s();\n  const conductores = drivers.length > 0 ? drivers[0].conductores : [];\n  console.log(\"conductores\", conductores);\n  const [conductoresFiltradosNombre, setConductoresFiltradosNombre] = useState([]);\n  const [conductoresFiltradosEquipo, setConductoresFiltradosEquipo] = useState([]);\n  const [equipoSeleccionado, setEquipoSeleccionado] = useState('');\n  const filtrarPorEquipo = event => {\n    const equipoSeleccionado = event.target.value;\n    setEquipoSeleccionado(equipoSeleccionado);\n    const conductoresFiltradosPorEquipo = conductores.filter(conductor => {\n      return conductor.equipos.some(equipo => equipo.Nombre === equipoSeleccionado);\n    });\n    setConductoresFiltradosEquipo(conductoresFiltradosPorEquipo);\n  };\n  useEffect(() => {\n    // Llamar a onSearch solo si hay conductores buscados por nombre\n    if (conductoresFiltradosNombre.length > 0) {\n      onSearch(conductoresFiltradosNombre).then(conductoresFiltradosPorNombre => {\n        setConductoresFiltradosNombre(conductoresFiltradosPorNombre);\n      });\n    }\n  }, [conductoresFiltradosNombre, onSearch]);\n  const handleSearch = searchTerm => {\n    setConductoresFiltradosNombre(searchTerm);\n  };\n  const equiposDisponibles = [...new Set(conductores.flatMap(conductor => conductor.equipos.map(equipo => equipo.Nombre)))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"La mejor pagina de la historia la encontraras en Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: equipoSeleccionado,\n      onChange: filtrarPorEquipo,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona un equipo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), equiposDisponibles.map((equipo, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: equipo,\n        children: equipo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      drivers: drivers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      drivers: conductoresFiltradosEquipo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"0PW5H6ttvKIRJIaZuivdmTNTink=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","Cards","jsxDEV","_jsxDEV","HomePage","onSearch","drivers","_s","conductores","length","console","log","conductoresFiltradosNombre","setConductoresFiltradosNombre","conductoresFiltradosEquipo","setConductoresFiltradosEquipo","equipoSeleccionado","setEquipoSeleccionado","filtrarPorEquipo","event","target","value","conductoresFiltradosPorEquipo","filter","conductor","equipos","some","equipo","Nombre","then","conductoresFiltradosPorNombre","handleSearch","searchTerm","equiposDisponibles","Set","flatMap","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","index","_c","$RefreshReg$"],"sources":["D:/MiPrimerProyectoJS/-Drivers-Proyecto-Individual/Client/src/Components/HomePage/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport Cards from \"../Cards/Cards\";\r\n\r\nconst HomePage = ({ onSearch, drivers }) => {\r\n    const conductores = drivers.length > 0 ? drivers[0].conductores : [];\r\n    console.log(\"conductores\", conductores);\r\n\r\n\r\n    const [conductoresFiltradosNombre, setConductoresFiltradosNombre] = useState([]);\r\n    const [conductoresFiltradosEquipo, setConductoresFiltradosEquipo] = useState([]);\r\n    const [equipoSeleccionado, setEquipoSeleccionado] = useState('');\r\n\r\n    const filtrarPorEquipo = (event) => {\r\n        const equipoSeleccionado = event.target.value;\r\n        setEquipoSeleccionado(equipoSeleccionado);\r\n\r\n        const conductoresFiltradosPorEquipo = conductores.filter(conductor => {\r\n            return conductor.equipos.some(equipo => equipo.Nombre === equipoSeleccionado);\r\n        });\r\n\r\n        setConductoresFiltradosEquipo(conductoresFiltradosPorEquipo);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Llamar a onSearch solo si hay conductores buscados por nombre\r\n        if (conductoresFiltradosNombre.length > 0) {\r\n            onSearch(conductoresFiltradosNombre).then(conductoresFiltradosPorNombre => {\r\n                setConductoresFiltradosNombre(conductoresFiltradosPorNombre);\r\n            });\r\n        }\r\n    }, [conductoresFiltradosNombre, onSearch]);\r\n\r\n    const handleSearch = (searchTerm) => {\r\n        setConductoresFiltradosNombre(searchTerm);\r\n    };\r\n\r\n    const equiposDisponibles = [...new Set(conductores.flatMap(conductor => conductor.equipos.map(equipo => equipo.Nombre)))];\r\n\r\n    return (\r\n        <div>\r\n            <h1>Home Page</h1>\r\n            <h2>La mejor pagina de la historia la encontraras en Home Page</h2>       \r\n            <SearchBar onSearch={handleSearch} />\r\n            <select value={equipoSeleccionado} onChange={filtrarPorEquipo}>\r\n                <option value=\"\">Selecciona un equipo</option>\r\n                {equiposDisponibles.map((equipo, index) => (\r\n                    <option key={index} value={equipo}>{equipo}</option>\r\n                ))}\r\n            </select>\r\n            {/* Mostrar los conductores filtrados por nombre */}\r\n            <Cards drivers={drivers} />\r\n            {/* Mostrar los conductores filtrados por equipo */}\r\n            <Cards drivers={conductoresFiltradosEquipo} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,WAAW,GAAGF,OAAO,CAACG,MAAM,GAAG,CAAC,GAAGH,OAAO,CAAC,CAAC,CAAC,CAACE,WAAW,GAAG,EAAE;EACpEE,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,WAAW,CAAC;EAGvC,MAAM,CAACI,0BAA0B,EAAEC,6BAA6B,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChF,MAAM,CAACgB,0BAA0B,EAAEC,6BAA6B,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChF,MAAM,CAACkB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMoB,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMH,kBAAkB,GAAGG,KAAK,CAACC,MAAM,CAACC,KAAK;IAC7CJ,qBAAqB,CAACD,kBAAkB,CAAC;IAEzC,MAAMM,6BAA6B,GAAGd,WAAW,CAACe,MAAM,CAACC,SAAS,IAAI;MAClE,OAAOA,SAAS,CAACC,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAKZ,kBAAkB,CAAC;IACjF,CAAC,CAAC;IAEFD,6BAA6B,CAACO,6BAA6B,CAAC;EAChE,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZ;IACA,IAAIa,0BAA0B,CAACH,MAAM,GAAG,CAAC,EAAE;MACvCJ,QAAQ,CAACO,0BAA0B,CAAC,CAACiB,IAAI,CAACC,6BAA6B,IAAI;QACvEjB,6BAA6B,CAACiB,6BAA6B,CAAC;MAChE,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAAClB,0BAA0B,EAAEP,QAAQ,CAAC,CAAC;EAE1C,MAAM0B,YAAY,GAAIC,UAAU,IAAK;IACjCnB,6BAA6B,CAACmB,UAAU,CAAC;EAC7C,CAAC;EAED,MAAMC,kBAAkB,GAAG,CAAC,GAAG,IAAIC,GAAG,CAAC1B,WAAW,CAAC2B,OAAO,CAACX,SAAS,IAAIA,SAAS,CAACC,OAAO,CAACW,GAAG,CAACT,MAAM,IAAIA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EAEzH,oBACIzB,OAAA;IAAAkC,QAAA,gBACIlC,OAAA;MAAAkC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtC,OAAA;MAAAkC,QAAA,EAAI;IAA0D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnEtC,OAAA,CAACH,SAAS;MAACK,QAAQ,EAAE0B;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCtC,OAAA;MAAQkB,KAAK,EAAEL,kBAAmB;MAAC0B,QAAQ,EAAExB,gBAAiB;MAAAmB,QAAA,gBAC1DlC,OAAA;QAAQkB,KAAK,EAAC,EAAE;QAAAgB,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC7CR,kBAAkB,CAACG,GAAG,CAAC,CAACT,MAAM,EAAEgB,KAAK,kBAClCxC,OAAA;QAAoBkB,KAAK,EAAEM,MAAO;QAAAU,QAAA,EAAEV;MAAM,GAA7BgB,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiC,CACtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAETtC,OAAA,CAACF,KAAK;MAACK,OAAO,EAAEA;IAAQ;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3BtC,OAAA,CAACF,KAAK;MAACK,OAAO,EAAEQ;IAA2B;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd,CAAC;AAAAlC,EAAA,CApDKH,QAAQ;AAAAwC,EAAA,GAARxC,QAAQ;AAsDd,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}