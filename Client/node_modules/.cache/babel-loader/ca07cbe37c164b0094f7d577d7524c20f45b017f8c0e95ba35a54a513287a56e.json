{"ast":null,"code":"var _jsxFileName = \"D:\\\\MiPrimerProyectoJS\\\\-Drivers-Proyecto-Individual\\\\Client\\\\src\\\\Components\\\\HomePage\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Cards from \"../Cards/Cards\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  onSearch,\n  drivers\n}) => {\n  _s();\n  const conductores = drivers.length > 0 ? drivers[0].conductores : [];\n  const [conductoresFiltrados, setConductoresFiltrados] = useState(conductores);\n  const [equipoSeleccionado, setEquipoSeleccionado] = useState('');\n  const filtrarPorEquipo = event => {\n    const equipoSeleccionado = event.target.value;\n    setEquipoSeleccionado(equipoSeleccionado);\n\n    // Filtrar conductores basados en el equipo seleccionado\n    if (equipoSeleccionado) {\n      const conductoresFiltrados = conductores.filter(conductor => {\n        return conductor.equipos.some(equipo => equipo.Nombre === equipoSeleccionado);\n      });\n      setConductoresFiltrados(conductoresFiltrados);\n    } else {\n      // Si no se selecciona ningún equipo, mostrar todos los conductores\n      setConductoresFiltrados(conductores);\n    }\n  };\n\n  // Obtener todos los equipos disponibles de los conductores\n  const equiposDisponibles = [...new Set(conductores.flatMap(conductor => conductor.equipos.map(equipo => equipo.Nombre)))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"La mejor pagina de la historia la encontraras en Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: equipoSeleccionado,\n      onChange: filtrarPorEquipo,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona un equipo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), equiposDisponibles.map((equipo, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: equipo,\n        children: equipo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Ordenar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      drivers: conductoresFiltrados\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"fpou53dNPbzBo7j8NpqbvXp7b8I=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["SearchBar","Cards","useState","jsxDEV","_jsxDEV","HomePage","onSearch","drivers","_s","conductores","length","conductoresFiltrados","setConductoresFiltrados","equipoSeleccionado","setEquipoSeleccionado","filtrarPorEquipo","event","target","value","filter","conductor","equipos","some","equipo","Nombre","equiposDisponibles","Set","flatMap","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","index","_c","$RefreshReg$"],"sources":["D:/MiPrimerProyectoJS/-Drivers-Proyecto-Individual/Client/src/Components/HomePage/HomePage.jsx"],"sourcesContent":["import SearchBar from \"../SearchBar/SearchBar\";\r\nimport Cards from \"../Cards/Cards\";\r\nimport { useState } from \"react\";\r\n\r\nconst HomePage = ({ onSearch, drivers }) => {\r\n  const conductores = drivers.length > 0 ? drivers[0].conductores : [];\r\n  const [conductoresFiltrados, setConductoresFiltrados] = useState(conductores);\r\n  const [equipoSeleccionado, setEquipoSeleccionado] = useState('');\r\n\r\n  const filtrarPorEquipo = (event) => {\r\n    const equipoSeleccionado = event.target.value;\r\n    setEquipoSeleccionado(equipoSeleccionado);\r\n\r\n    // Filtrar conductores basados en el equipo seleccionado\r\n    if (equipoSeleccionado) {\r\n      const conductoresFiltrados = conductores.filter(conductor => {\r\n        return conductor.equipos.some(equipo => equipo.Nombre === equipoSeleccionado);\r\n      });\r\n      setConductoresFiltrados(conductoresFiltrados);\r\n    } else {\r\n      // Si no se selecciona ningún equipo, mostrar todos los conductores\r\n      setConductoresFiltrados(conductores);\r\n    }\r\n  };\r\n\r\n  // Obtener todos los equipos disponibles de los conductores\r\n  const equiposDisponibles = [...new Set(conductores.flatMap(conductor => conductor.equipos.map(equipo => equipo.Nombre)))];\r\n\r\n  return (\r\n    <div>\r\n      <h1>Home Page</h1>\r\n      <h2>La mejor pagina de la historia la encontraras en Home Page</h2>\r\n      <SearchBar onSearch={onSearch} />\r\n      {/* Select para seleccionar el equipo */}\r\n      <select value={equipoSeleccionado} onChange={filtrarPorEquipo}>\r\n        <option value=\"\">Selecciona un equipo</option>\r\n        {equiposDisponibles.map((equipo, index) => (\r\n          <option key={index} value={equipo}>{equipo}</option>\r\n        ))}\r\n      </select>\r\n      <button>Ordenar</button>\r\n      <Cards drivers={conductoresFiltrados} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}