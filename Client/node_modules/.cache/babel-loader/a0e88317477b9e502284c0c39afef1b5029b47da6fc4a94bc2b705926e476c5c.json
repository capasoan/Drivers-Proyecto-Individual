{"ast":null,"code":"import { OBTENER_DETALLES_CONDUCTOR, BUSCAR_CONDUCTOR, FILTRAR_POR_EQUIPO } from \"./action-types.js\";\nimport axios from \"axios\";\nexport const obtenerDetallesConductor = idDriver => {\n  //  console.log(idDriver)\n  return async dispatch => {\n    try {\n      const response = await axios.get(`http://localhost:3001/drivers/${idDriver}`);\n      dispatch({\n        type: OBTENER_DETALLES_CONDUCTOR,\n        payload: response.data\n      });\n    } catch (error) {\n      console.error(\"Error al obtener los detalles del conductor:\", error);\n    }\n  };\n};\nexport const buscarConductor = nombre => {\n  return async dispatch => {\n    try {\n      const URL = 'http://localhost:3001/drivers/name';\n      const response = await axios.get(URL, {\n        params: {\n          nombre: nombre\n        }\n      });\n      dispatch({\n        type: BUSCAR_CONDUCTOR,\n        payload: response.data\n      });\n    } catch (error) {\n      console.error(\"Error al buscar conductor:\", error);\n    }\n  };\n};\nexport const filtrarPorEquipo = nombreEquipo => {\n  return {\n    type: FILTRAR_POR_EQUIPO,\n    payload: nombreEquipo\n  };\n};","map":{"version":3,"names":["OBTENER_DETALLES_CONDUCTOR","BUSCAR_CONDUCTOR","FILTRAR_POR_EQUIPO","axios","obtenerDetallesConductor","idDriver","dispatch","response","get","type","payload","data","error","console","buscarConductor","nombre","URL","params","filtrarPorEquipo","nombreEquipo"],"sources":["D:/MiPrimerProyectoJS/-Drivers-Proyecto-Individual/Client/src/redux/actions.js"],"sourcesContent":["import { OBTENER_DETALLES_CONDUCTOR, BUSCAR_CONDUCTOR, FILTRAR_POR_EQUIPO } from \"./action-types.js\"\r\nimport axios from \"axios\"\r\n\r\n\r\n  \r\n  export const obtenerDetallesConductor = (idDriver) => {\r\n  //  console.log(idDriver)\r\n    return async (dispatch) => {\r\n      try {\r\n        \r\n        const response = await axios.get(`http://localhost:3001/drivers/${idDriver}`);\r\n        dispatch({\r\n          type: OBTENER_DETALLES_CONDUCTOR,\r\n          payload: response.data \r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error al obtener los detalles del conductor:\", error);\r\n       \r\n      }\r\n    };\r\n  };\r\n\r\n\r\n\r\n  export const buscarConductor = (nombre) => {\r\n    return async (dispatch) => {\r\n      try {\r\n        const URL = 'http://localhost:3001/drivers/name';\r\n        const response = await axios.get(URL, {\r\n          params: {\r\n            nombre: nombre\r\n          }\r\n        });\r\n        \r\n        dispatch({\r\n          type: BUSCAR_CONDUCTOR,\r\n          payload: response.data\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error al buscar conductor:\", error);\r\n      }\r\n    };\r\n  };\r\n\r\n\r\n  export const filtrarPorEquipo =(nombreEquipo) => {\r\n    return {\r\n      type: FILTRAR_POR_EQUIPO,\r\n      payload: nombreEquipo\r\n    \r\n    }\r\n  }"],"mappings":"AAAA,SAASA,0BAA0B,EAAEC,gBAAgB,EAAEC,kBAAkB,QAAQ,mBAAmB;AACpG,OAAOC,KAAK,MAAM,OAAO;AAIvB,OAAO,MAAMC,wBAAwB,GAAIC,QAAQ,IAAK;EACtD;EACE,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MAEF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,iCAAgCH,QAAS,EAAC,CAAC;MAC7EC,QAAQ,CAAC;QACPG,IAAI,EAAET,0BAA0B;QAChCU,OAAO,EAAEH,QAAQ,CAACI;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IAEtE;EACF,CAAC;AACH,CAAC;AAID,OAAO,MAAME,eAAe,GAAIC,MAAM,IAAK;EACzC,OAAO,MAAOT,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMU,GAAG,GAAG,oCAAoC;MAChD,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACQ,GAAG,EAAE;QACpCC,MAAM,EAAE;UACNF,MAAM,EAAEA;QACV;MACF,CAAC,CAAC;MAEFT,QAAQ,CAAC;QACPG,IAAI,EAAER,gBAAgB;QACtBS,OAAO,EAAEH,QAAQ,CAACI;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;AACH,CAAC;AAGD,OAAO,MAAMM,gBAAgB,GAAGC,YAAY,IAAK;EAC/C,OAAO;IACLV,IAAI,EAAEP,kBAAkB;IACxBQ,OAAO,EAAES;EAEX,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}