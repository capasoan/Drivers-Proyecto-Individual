{"ast":null,"code":"var _s = $RefreshSig$();\n// USANDO REDUX\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { obtenerDetallesConductor } from '../../redux/actions';\nconst Detail = ({\n  conductor,\n  obtenerDetallesConductor\n}) => {\n  _s();\n  const {\n    idDriver\n  } = useParams();\n  useEffect(() => {\n    obtenerDetallesConductor(idDriver);\n  }, [idDriver, obtenerDetallesConductor]);\n\n  // Resto del c贸digo para mostrar los detalles del conductor...\n};\n_s(Detail, \"DzLZ+6qYZog5s9fWO8fHJz6Zb3c=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nconst mapStateToProps = state => ({\n  conductor: state.detalleConductor\n});\nexport default connect(mapStateToProps, {\n  obtenerDetallesConductor\n})(Detail);\n\n//USANDO REACT\n\n// import { useParams } from \"react-router-dom\";\n// import { useEffect, useState } from \"react\";\n// import Card from \"../Card/Card\";\n// import axios from \"axios\";\n\n// function Detail() {\n\n// const { idDriver } = useParams();\n// const [driverDetail, setDriverDetail] = useState(null);\n// const [teams, setTeams] = useState([]);\n\n// useEffect(() => {\n//     const fetchDriverDetail = async () => {\n//         if (idDriver) {\n//             try {\n//                 const response = await axios.get(`http://localhost:3001/drivers/${idDriver}`);\n//                 const data = response.data;\n//                 if (data.driver) {\n//                     setDriverDetail(data.driver);\n//                     setTeams(data.teams); // Establecer los equipos obtenidos de la respuesta\n//                 } else {\n//                     window.alert(\"No hay conductor con este ID\");\n//                 }\n//             } catch (error) {\n//                 console.error(\"Error al obtener los detalles del conductor:\", error);\n//             }\n//         }\n//     };\n\n//     fetchDriverDetail(); \n// }, [idDriver]);\n\n// if (!driverDetail) {\n//     return <div>Cargando...</div>;\n// }\n\n// // Combinar la informaci贸n del conductor y los equipos\n// const driverWithTeams = { ...driverDetail, equipos: teams };\n\n{/* <Card conductor={driverWithTeams} />  */}\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useEffect","useParams","connect","obtenerDetallesConductor","Detail","conductor","_s","idDriver","_c","mapStateToProps","state","detalleConductor","$RefreshReg$"],"sources":["D:/MiPrimerProyectoJS/-Drivers-Proyecto-Individual/Client/src/Components/Detail/Detail.jsx"],"sourcesContent":["// USANDO REDUX\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { obtenerDetallesConductor } from '../../redux/actions';\r\n\r\nconst Detail = ({ conductor, obtenerDetallesConductor }) => {\r\n  const { idDriver } = useParams();\r\n\r\n  useEffect(() => {\r\n    obtenerDetallesConductor(idDriver);\r\n  }, [idDriver, obtenerDetallesConductor]);\r\n\r\n  // Resto del c贸digo para mostrar los detalles del conductor...\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  conductor: state.detalleConductor,\r\n});\r\n\r\nexport default connect(mapStateToProps, { obtenerDetallesConductor })(Detail);\r\n\r\n\r\n\r\n\r\n//USANDO REACT\r\n\r\n// import { useParams } from \"react-router-dom\";\r\n// import { useEffect, useState } from \"react\";\r\n// import Card from \"../Card/Card\";\r\n// import axios from \"axios\";\r\n\r\n// function Detail() {\r\n\r\n    // const { idDriver } = useParams();\r\n    // const [driverDetail, setDriverDetail] = useState(null);\r\n    // const [teams, setTeams] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     const fetchDriverDetail = async () => {\r\n    //         if (idDriver) {\r\n    //             try {\r\n    //                 const response = await axios.get(`http://localhost:3001/drivers/${idDriver}`);\r\n    //                 const data = response.data;\r\n    //                 if (data.driver) {\r\n    //                     setDriverDetail(data.driver);\r\n    //                     setTeams(data.teams); // Establecer los equipos obtenidos de la respuesta\r\n    //                 } else {\r\n    //                     window.alert(\"No hay conductor con este ID\");\r\n    //                 }\r\n    //             } catch (error) {\r\n    //                 console.error(\"Error al obtener los detalles del conductor:\", error);\r\n    //             }\r\n    //         }\r\n    //     };\r\n    \r\n    //     fetchDriverDetail(); \r\n    // }, [idDriver]);\r\n    \r\n    // if (!driverDetail) {\r\n    //     return <div>Cargando...</div>;\r\n    // }\r\n\r\n    // // Combinar la informaci贸n del conductor y los equipos\r\n    // const driverWithTeams = { ...driverDetail, equipos: teams };\r\n\r\n      {/* <Card conductor={driverWithTeams} />  */}"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,wBAAwB,QAAQ,qBAAqB;AAE9D,MAAMC,MAAM,GAAGA,CAAC;EAAEC,SAAS;EAAEF;AAAyB,CAAC,KAAK;EAAAG,EAAA;EAC1D,MAAM;IAAEC;EAAS,CAAC,GAAGN,SAAS,CAAC,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACdG,wBAAwB,CAACI,QAAQ,CAAC;EACpC,CAAC,EAAE,CAACA,QAAQ,EAAEJ,wBAAwB,CAAC,CAAC;;EAExC;AACF,CAAC;AAACG,EAAA,CARIF,MAAM;EAAA,QACWH,SAAS;AAAA;AAAAO,EAAA,GAD1BJ,MAAM;AAUZ,MAAMK,eAAe,GAAIC,KAAK,KAAM;EAClCL,SAAS,EAAEK,KAAK,CAACC;AACnB,CAAC,CAAC;AAEF,eAAeT,OAAO,CAACO,eAAe,EAAE;EAAEN;AAAyB,CAAC,CAAC,CAACC,MAAM,CAAC;;AAK7E;;AAEA;AACA;AACA;AACA;;AAEA;;AAEI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEE,CAAC;AAA4C,IAAAI,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}