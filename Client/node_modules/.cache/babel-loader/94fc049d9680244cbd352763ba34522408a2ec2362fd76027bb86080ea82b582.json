{"ast":null,"code":"import { OBTENER_DETALLES_CONDUCTOR, FILTRAR_POR_EQUIPO } from \"./action-types.js\";\nimport axios from \"axios\";\nexport const obtenerDetallesConductor = idDriver => {\n  //  console.log(idDriver)\n  return async dispatch => {\n    try {\n      const response = await axios.get(`http://localhost:3001/drivers/${idDriver}`);\n      dispatch({\n        type: OBTENER_DETALLES_CONDUCTOR,\n        payload: response.data\n      });\n    } catch (error) {\n      console.error(\"Error al obtener los detalles del conductor:\", error);\n    }\n  };\n};\nconst [busqueda, setBusqueda] = useState([]);\nexport const onSearch = async nombre => {\n  try {\n    const buscar = await axios.get('http://localhost:3001/drivers/name', {\n      params: {\n        nombre: nombre\n      }\n    });\n    setBusqueda([buscar.data]);\n\n    //console.log(\"onSearch\", buscar.data)\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const filtrarPorEquipo = nombreEquipo => {\n  return {\n    type: FILTRAR_POR_EQUIPO,\n    payload: nombreEquipo\n  };\n};","map":{"version":3,"names":["OBTENER_DETALLES_CONDUCTOR","FILTRAR_POR_EQUIPO","axios","obtenerDetallesConductor","idDriver","dispatch","response","get","type","payload","data","error","console","busqueda","setBusqueda","useState","onSearch","nombre","buscar","params","log","filtrarPorEquipo","nombreEquipo"],"sources":["D:/MiPrimerProyectoJS/-Drivers-Proyecto-Individual/Client/src/redux/actions.js"],"sourcesContent":["import { OBTENER_DETALLES_CONDUCTOR, FILTRAR_POR_EQUIPO } from \"./action-types.js\"\r\nimport axios from \"axios\"\r\n\r\n\r\n  \r\n  export const obtenerDetallesConductor = (idDriver) => {\r\n  //  console.log(idDriver)\r\n    return async (dispatch) => {\r\n      try {\r\n        \r\n        const response = await axios.get(`http://localhost:3001/drivers/${idDriver}`);\r\n        dispatch({\r\n          type: OBTENER_DETALLES_CONDUCTOR,\r\n          payload: response.data \r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error al obtener los detalles del conductor:\", error);\r\n       \r\n      }\r\n    };\r\n  };\r\n\r\n\r\n\r\n  const [busqueda, setBusqueda]= useState([]);\r\n\r\n  export const onSearch= async(nombre)=>{\r\n      try{\r\n\r\n          const buscar = await axios.get('http://localhost:3001/drivers/name', {\r\n              params: {\r\n                  nombre: nombre\r\n              }\r\n          })\r\n          setBusqueda([buscar.data]);\r\n        \r\n    //console.log(\"onSearch\", buscar.data)\r\n\r\n      }catch(error){\r\n          console.log(error)\r\n      }\r\n  }\r\n\r\n  export const filtrarPorEquipo =(nombreEquipo) => {\r\n    return {\r\n      type: FILTRAR_POR_EQUIPO,\r\n      payload: nombreEquipo\r\n    \r\n    }\r\n  }"],"mappings":"AAAA,SAASA,0BAA0B,EAAEC,kBAAkB,QAAQ,mBAAmB;AAClF,OAAOC,KAAK,MAAM,OAAO;AAIvB,OAAO,MAAMC,wBAAwB,GAAIC,QAAQ,IAAK;EACtD;EACE,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MAEF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,iCAAgCH,QAAS,EAAC,CAAC;MAC7EC,QAAQ,CAAC;QACPG,IAAI,EAAER,0BAA0B;QAChCS,OAAO,EAAEH,QAAQ,CAACI;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IAEtE;EACF,CAAC;AACH,CAAC;AAID,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAEC,QAAQ,CAAC,EAAE,CAAC;AAE3C,OAAO,MAAMC,QAAQ,GAAE,MAAMC,MAAM,IAAG;EAClC,IAAG;IAEC,MAAMC,MAAM,GAAG,MAAMhB,KAAK,CAACK,GAAG,CAAC,oCAAoC,EAAE;MACjEY,MAAM,EAAE;QACJF,MAAM,EAAEA;MACZ;IACJ,CAAC,CAAC;IACFH,WAAW,CAAC,CAACI,MAAM,CAACR,IAAI,CAAC,CAAC;;IAEhC;EAEE,CAAC,QAAMC,KAAK,EAAC;IACTC,OAAO,CAACQ,GAAG,CAACT,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAGC,YAAY,IAAK;EAC/C,OAAO;IACLd,IAAI,EAAEP,kBAAkB;IACxBQ,OAAO,EAAEa;EAEX,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}